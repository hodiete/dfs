<?php

/**
 * @file
 * Functions to support theming in the dfs_ny theme.
 */

use Drupal\node\Entity\Node;
// use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_html().
 */
function dfs_ny_preprocess_html(&$variables) {
  // <body> classes for sidebars.
  if (isset($variables['page']['sidebar_first']) && isset($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'body-sidebars-both';
  }
  elseif (isset($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'body-sidebars-first';
  }
  elseif (isset($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'body-sidebars-second';
  }
  else {
    $variables['attributes']['class'][] = 'body-sidebars-none';
  }

  // Add view class to body.
  if (isset($variables['page']['content']['system_main']['#view_id'])) {
    $view_id = $variables['page']['content']['system_main']['#view_id'];
    $variables['attributes']['class'][] = 'views-page-' . str_replace('_', '-', $view_id);
  }
}

/**
 * Implements hook_preprocess_paragraph__webny_card_paragraph_type().
 */
function dfs_ny_preprocess_paragraph__webny_card_paragraph_type(&$variables) {
  // Load the site name out of configuration.
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');

  // Grab the host to pass to the twig template to build URLs.
  $variables['host'] = \Drupal::request()->getSchemeAndHttpHost();

  // Pull in paragraph object to acquire entity references.
  $paragraph = $variables['paragraph'];
  $referencedEntities = $paragraph->get('field_webny_card_entity_ref');

  // Loop through each referenced entity passing the url as an array to twig.
  foreach ($referencedEntities->referencedEntities() as $entity) {
    $variables['card_url'][] = $entity->url();
    $variables['entity_type'][] = $entity->bundle();
  }
}

/**
 * Implements hook_preprocess_node__webny_landing_page.
 */
function dfs_ny_preprocess_node__webny_landing_page(&$variables) {
  // Load the site name out of configuration.
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
}

/**
* Implements hook_preprocess_node__webny_page__full
*/
function dfs_ny_preprocess_node__webny_page__full(&$variables) {
  // Load the site name out of configuration.
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');

  /* Create variable that contains breadcrumb for node templates. */

  /* create a block object */
  $my_block_object = \Drupal\block\Entity\Block::load('breadcrumb');
  dpm($variables['site_name']);
  /* creates a renderable array from the block object */
  // $variables['breadcrumb_in_node'] = \Drupal::entityManager()->getViewBuilder('block')->view($my_block_object);

}

/**
 * Implements hook_preprocess_node__webny_news.
 */
function dfs_ny_preprocess_node__webny_news(&$variables) {
  // Load the site name out of configuration.
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
}

/**
 * Implements hook_preprocess_node__webny_event.
 */
function dfs_ny_preprocess_node__webny_event(&$variables) {
  // Load the site name out of configuration.
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
}

/**
 * Implements hook_preprocess_node__webny_generic_page__full.
 */
function dfs_ny_preprocess_node__webny_generic_page__full(&$variables) {
  // Load the site name out of configuration.
  $config = \Drupal::config('system.site');
  $variables['site_name'] = $config->get('name');
}

/**
 * Implements hook_preprocess_node__webny_location__teaser.
 */
function dfs_ny_preprocess_node__webny_location__teaser(&$variables) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = &$variables['node'];
  if ($node && $node instanceof Node) {
    if ($node->hasField('field_webny_location_counties')) {
      $trimmed = FALSE;
      /** @var \Drupal\Core\Field\FieldItemList $counties */
      $field_webny_location_counties = $node->get('field_webny_location_counties');
      $allowed_values = options_allowed_values($field_webny_location_counties->getFieldDefinition()->getFieldStorageDefinition(), $node);

      $county_ids = array_column($field_webny_location_counties->getValue(), 'value');
      if (count($county_ids) >= 24) {
        $county_ids = array_slice($county_ids, 0, 25);
        $trimmed = TRUE;
      }
      $counties = [];
      foreach ($county_ids as $county_id) {
        if (isset($allowed_values[$county_id])) {
          $counties[] = $allowed_values[$county_id];
        }
      }
      $counties_string = join(', ', $counties);
      if ($trimmed) {
        $counties_string .= '...';
      }
      $variables['counties_string'] = $counties_string;
    }
  }
}

/**
* Implements hook_preprocess_field
*/
function dfs_ny_preprocess_field(&$variables) {
  if ($variables['field_name'] === 'field_webny_event_address') {
    $variables['address_line1'] = $variables['element']['0']['address_line1'];
    $variables['address_line2'] = $variables['element']['0']['address_line2'];
    $variables['administrative_area'] = $variables['element']['0']['administrative_area'];
    $variables['locality'] = $variables['element']['0']['locality'];
    $variables['postal_code'] = $variables['element']['0']['postal_code'];
  }
}

/**
* Implements hook_library_info_alter(&$libraries, $extension).
*/
function dfs_ny_library_info_alter(&$libraries, $extension) {
  if ($extension !== 'dfs_ny') {
    return;
  }
  if (isset($libraries['global-styling']['css']['theme'])) {
    $libraries['global-styling']['css']['theme'] = array('css/' . theme_get_setting('site_color_pallet') . '.css' => array());
  }
  $temp=0;
}

/**
* Implements hook_theme_suggestions_field_alter().
*/
function dfs_ny_suggestions_field_alter(&$suggestions, $variables) {
  $suggestions[] = 'field__' . $variables['element']['#bundle'] . '_' . $variables['element']['#field_name'];
  $suggestions[] = 'field__' . $variables['element']['#bundle'] . '_' . $variables['element']['#field_name'] . '__' . $variables['element']['#field_type'];
  if ($variables['element']['#view_mode'] === 'teaser') {
    $suggestions[] = 'field__' . $variables['element']['#bundle'] . '_' . $variables['element']['#field_name'] . '__' . $variables['element']['#view_mode'];
  }
  return $suggestions;
}

/**
* Implements hook_theme_suggestions_HOOK_alter().
*/
function dfs_ny_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__' . $content_type;
  }
}

function dfs_ny_theme_suggestions_menu_alter(array &$suggestions, array $variables)
{
  if (isset($variables['attributes']['block'])) {
    $suggestions[] = $variables['theme_hook_original'] . '__' . $hook;
  }
}

/**
* Implements hook_theme_preprocess_page().
*/
function dfs_ny_preprocess_page(&$variables) {
  $request = \Drupal::request();
  $route_match = \Drupal::routeMatch();
  if ($route_match->getParameter('node')) {
    $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());
    $variables['dfs_page_title'] = $page_title;
  }

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__' . $content_type;
  }

  // if(!isset($variables['agencyname'])){
  //   $variables['agencyname'] = 'Department of Financial Services';
  // }
}

/**
 * Implements hook_theme_preprocess_breadcrumb().
 */

function dfs_ny_preprocess_breadcrumb(&$variables) {
  dpm($variables['breadcrumb']);
  /*
  if ($variables['breadcrumb']) {
    $request = \Drupal::request();
    $route_match = \Drupal::routeMatch();
    $page_title = \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject());

    if (!empty($page_title)) {
      $variables['breadcrumb'][] = [
        'text' => $page_title,
        'attributes' => new Attribute(['class' => ['active']])
      ];
    }
  }
  */

}