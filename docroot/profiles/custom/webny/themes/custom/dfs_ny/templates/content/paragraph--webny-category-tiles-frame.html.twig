{#
/**
 * @file
 * Category Tiles theme implementation to display the Category Tiles paragraph type content on the Landing Page.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
]
%}
{% set category_tiles_image = file_url(paragraph.field_webny_cat_tiles_image.entity.field_image.entity.uri.value) %}

{% block paragraph %}
    <article {{ attributes.addClass('category-tiles-layout') }}>

        {# START QUICK EDITS #}
        {{ title_prefix }}

        <div{{ attributes.addClass(classes) }}>
            {% block content %}
            {# BACKGROUND IMAGE - CHECK IF BACKGROUND IMAGE EXISTS #}
            {% if paragraph.field_webny_cat_tiles_image.value is empty %}
            <div class="category-tiles-no-image category-tiles-landing" style="">
                {% else %}
                <div class="category-tiles-has-image category-tiles-landing" style="background-image:url('{{ category_tiles_image }}');">
                    {% endif %}
                    {# CATEGORY TILES TITLE - CHECK IF TITLE EXISTS #}
                    {# CATEGORY TILES HEADLINE - CHECK IF HEADLINE EXISTS #}
                    {%  if((paragraph.field_webny_cat_tiles_title.value is not empty and paragraph.field_webny_cat_tiles_title.value is not null) or (paragraph.field_webny_cat_tiles_headline.value is not empty and paragraph.field_webny_cat_tiles_headline.value is not null)) %}
                    <h2>
                        <span class="frame-title">{{ content.field_webny_cat_tiles_title}}</span>
                        <span class="frame-headline">{{ content.field_webny_cat_tiles_headline}}</span>
                    </h2>
                    {% else %}
                    {% endif %}
                    {# CATEGORY TILES BODY - CHECK IF BODY EXISTS #}
                    {% if paragraph.field_webny_cat_tiles_body.value is not null and paragraph.field_webny_cat_tiles_body.value is not empty %}
                    <div class="body-area">
                        <div class="body-area-in">
                            <div class="category-tiles-body">
                                <span>{{ content.field_webny_cat_tiles_body }}</span>
                            </div>
                        </div>
                    </div>
                    {% endif %}
                    <div class="category-tiles-link-content">
                        {{ content.field_webny_cat_button_link }}
                    </div>
                </div>

        </div>
        {% endblock %}
        {{ title_suffix }}
    </article>

{% endblock paragraph %}
