{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
set classes = [
'paragraph',
'paragraph--type--' ~ paragraph.bundle|clean_class,
view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
]
%}
{% block paragraph %}
    <div class="faq-card-box">
        {% block content %}
          {% if paragraph.field_link_box.value  %}

            <div class="faq-card-question-body">
              <p class="faq-card-title">
                  {{ paragraph.field_page_title.value | striptags }}
              </p>
              <br>
              <div class="top-questions-body">
                {% for link in paragraph.field_top_question_links %}
                <div class="question-span">
                  <img class="top-question-card-icon" src="/profiles/custom/webny/themes/custom/dfs_ny/icons/dfs/arrow-teal.svg"/>
                  <div class="top-question-text">
                    <a href="{{ link.url }}">
                      {{ link.title }}
                    </a>
                  </div>
                  <br>
                </div>
                {% endfor %}
              </div>
            </div>

          {% else %}
            <div class="faq-card-image-div">
                <img class="faq-card-image" src="{{ file_url(paragraph.field_banner_image.entity.fileuri) }}"/>
            </div>
            <div class="faq-card-text">
              <p class="faq-card-title">
                  {{ paragraph.field_page_title.value | striptags }}
              </p>
              <p class="faq-card-body">
                  {{ paragraph.field_body.value | striptags }}
              </p>
            </div>
            <div class="faq-card-link">
                <a href="{{ paragraph.field_page_link.url }}">
                  {{ paragraph.field_page_link.title }}
                  <img class="faq-card-icon" src="/profiles/custom/webny/themes/custom/dfs_ny/icons/dfs/arrow-teal.svg"/>
                </a>
            </div>
          {% endif %}

        {% endblock %}
    </div>
{% endblock paragraph %}
