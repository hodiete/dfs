<?php

/**
 * @file
 * Install, update and uninstall functions for the webny platform.
 */

use Drupal\user\Entity\Role;
use Drupal\Core\Database\Database;

/**
 * Implements hook_update_n().
 *
 * Sample for demo only.
 */

/*function webny_configuration_update_8000() {
\Drupal::service('module_installer')
->install(['module1']);
}*/

/**
 * Implements hook_update_n().
 *
 * Set admin theme to Adminimal.
 */
function webny_configuration_update_8001() {
  \Drupal::configFactory()
      ->getEditable('system.theme')
      ->set('admin', 'adminimal_theme')
      ->save(TRUE);
}

/**
 * Implements hook_update_n().
 *
 * Enable WebNY News feature.
 */
function webny_configuration_update_8002() {
  \Drupal::service('module_installer')
      ->install(['webny_news']);
}

/**
 * Implements hook_update_n().
 *
 * Enable WebNY Subject Heading Taxonomy.
 */
function webny_configuration_update_8003() {
  \Drupal::service('module_installer')
      ->install(['webny_subject_heading_taxonomy']);
}

/**
 * Implements hook_update_n().
 *
 * Enable WebNY Text Editors and Formats.
 */
function webny_configuration_update_8004() {
  \Drupal::service('module_installer')
      ->install(['webny_text_editors']);
  \Drupal::service('module_installer')
      ->install(['webny_text_formats']);
}

/**
 * Implements hook_update_n().
 *
 * Enable Telephone Module.
 */
function webny_configuration_update_8005() {
  \Drupal::service('module_installer')
      ->install(['telephone']);
}

/**
 * Implements hook_update_n().
 *
 * Enable WebNY Contact feature.
 */
function webny_configuration_update_8006() {
  \Drupal::service('module_installer')
      ->install(['webny_contact_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Enable WebNY News Content Type feature.
 */
function webny_configuration_update_8007() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_news']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Enable WebNY Global and Agency Taxonomy feature.
 */
function webny_configuration_update_8008() {
  \Drupal::service('module_installer')
      ->install(['webny_global_and_agency_taxonomies']);
}

/**
 * Implements hook_update_n().
 *
 * Enable WebNY Inner Page Content Type.
 */
function webny_configuration_update_8009() {
  \Drupal::service('module_installer')
      ->install(['webny_inner_page_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Enable Honeypot Module.
 */
function webny_configuration_update_8010() {
  \Drupal::service('module_installer')
      ->install(['honeypot']);
}

/**
 * Implements hook_update_n().
 *
 * Enable Contact Storage Module.
 */
function webny_configuration_update_8011() {
  \Drupal::service('module_installer')
      ->install(['contact_storage']);
}

/**
 * Implements hook_update_n().
 *
 * Enable Responsive image module and Image Styles feature.
 */
function webny_configuration_update_8012() {
  \Drupal::service('module_installer')
      ->install(['responsive_image']);
  \Drupal::service('module_installer')
      ->install(['webny_image_styles']);
}

/**
 * Implements hook_update_n().
 *
 * Adds Site Builder, Site Administrator, User Administrator and
 * Content Editor roles to existing sites.
 */
function webny_configuration_update_8015() {
  _webny_configuration_add_role('site_builder', 'Site Builder', 6);
  _webny_configuration_add_role('site_admin', 'Site Administrator', 7);
  _webny_configuration_add_role('user_admin2', 'User Administrator', 8);
  _webny_configuration_add_role('content_author', 'Content Author', 9);
}

/**
 * Support function to add a role.
 */
function _webny_configuration_add_role($id = "", $label = "", $weight = 0) {
  $role = Role::create(array('id' => $id, 'label' => $label));
  $role->setWeight($weight);
  $role->setIsAdmin(FALSE);
  $role->save();
}

/**
 * Implements hook_update_n().
 *
 * Enable NYS Universal navigation custom module.
 */
function webny_configuration_update_8016() {
  \Drupal::service('module_installer')
      ->install(['webny_unav']);
}

/**
 * Implements hook_update_n().
 *
 * Enables demo content custom module.
 */
function webny_configuration_update_8017() {
  \Drupal::service('module_installer')
      ->install(['webny_demo_content']);
}

/**
 * Implements hook_update_n().
 *
 * Enable Document Content Type custom module.
 */
function webny_configuration_update_8018() {
  \Drupal::service('module_installer')
      ->install(['webny_document_content_type']);

}

/**
 * Implements hook_update_n().
 *
 * Installs the media library and dependencies.
 */
function webny_configuration_update_8019() {
  \Drupal::service('module_installer')
      ->install(['media_entity']);
  \Drupal::service('module_installer')
      ->install(['entity_embed']);
  \Drupal::service('module_installer')
      ->install(['serialization']);
  \Drupal::service('module_installer')
      ->install(['rest']);
  \Drupal::service('module_installer')
      ->install(['media_entity_image']);
  \Drupal::service('module_installer')
      ->install(['media_entity_embeddable_video']);
  \Drupal::service('module_installer')
      ->install(['lightning_media_image']);
  \Drupal::service('module_installer')
      ->install(['lightning_media_video']);
  \Drupal::service('module_installer')
      ->install(['webny_media']);
}

/**
 * Implements hook_update_n().
 *
 * Installs the paragraphs types.
 */
function webny_configuration_update_8020() {

  \Drupal::service('module_installer')
      ->install(['webny_paragraphs_types']);
}

/**
 * Implements hook_update_n().
 *
 * Installs the landing page content type.
 */
function webny_configuration_update_8021() {

  \Drupal::service('module_installer')
      ->install(['webny_landing_page_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Adds frame fields to news and page.
 */
function webny_configuration_update_8022() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_inner_page_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_inner_page_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Installs global nav feature.
 */
function webny_configuration_update_8024() {

  \Drupal::service('module_installer')
      ->install(['webny_global_navigation']);
}

/**
 * Implements hook_update_n().
 *
 * Installs global navigation footer feature.
 */
function webny_configuration_update_8025() {

  \Drupal::service('module_installer')
      ->install(['webny_global_navigation_footer']);
}

/**
 * Implements hook_update_n().
 *
 * Reverts contact information module.
 */
function webny_configuration_update_8026() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_contact_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_contact_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Reinstall demo content module.
 */
function webny_configuration_update_8027() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_demo_content']);
  \Drupal::service('module_installer')
      ->install(['webny_demo_content']);
}

/**
 * Implements hook_update_n().
 *
 * Installs demo content view.
 */
function webny_configuration_update_8028() {

  \Drupal::service('module_installer')
      ->install(['webny_demo_content_view']);
}

/**
 * Implements hook_update_n().
 *
 * Installs contact form.
 */
function webny_configuration_update_8029() {

  \Drupal::service('module_installer')
      ->install(['webny_contact_form']);
}

/**
 * Implements hook_update_n().
 *
 * Installs contact form.
 */
function webny_configuration_update_8030() {

  \Drupal::service('module_installer')
      ->install(['csv_serialization']);
}

/**
 * Implements hook_update_n().
 *
 * Installs contact form messages view.
 */
function webny_configuration_update_8031() {

  \Drupal::service('module_installer')
      ->install(['webny_contact_form_message_export_view']);
}

/**
 * Implements hook_update_n().
 *
 * Installs Whitelisted Content content type.
 */
function webny_configuration_update_8032() {

  \Drupal::service('module_installer')
      ->install(['webny_whitelisted_content']);
}

/**
 * Implements hook_update_n().
 *
 * Installs field_group module and Summary frame paragraph type.
 */
function webny_configuration_update_8033() {

  \Drupal::service('module_installer')
      ->install(['field_group']);
  \Drupal::service('module_installer')
      ->install(['webny_summary_frame']);
}

/**
 * Implements hook_update_n().
 *
 * Reinstall demo content module.
 */
function webny_configuration_update_8034() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_summary_frame']);
  \Drupal::service('module_installer')
      ->install(['webny_summary_frame']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_landing_page_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_landing_page_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Reinstall demo content module.
 */
function webny_configuration_update_8035() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_inner_page_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_inner_page_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_landing_page_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_landing_page_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_whitelisted_content']);
  \Drupal::service('module_installer')
      ->install(['webny_whitelisted_content']);
}

/**
 * Implements hook_update_n().
 *
 * Installs field_group module and Summary frame paragraph type.
 */
function webny_configuration_update_8036() {

  \Drupal::service('module_installer')
      ->install(['field_group']);
}

/**
 * Implements hook_update_n().
 *
 * Reinstall contact content type.
 */
function webny_configuration_update_8037() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_contact_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_contact_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Installs Get Involved frame paragraph type.
 */
function webny_configuration_update_8038() {

  \Drupal::service('module_installer')
      ->install(['webny_get_involved_frame']);
}

/**
 * Implements hook_update_n().
 *
 * Installs the WebNY Global Nav Drupal 8 Implmenetation.
 * by Chris VanWormer. -iojonep.
 */
function webny_configuration_update_8039() {

  \Drupal::service('module_installer')
      ->install(['webny_global_nav']);
}

/**
 * Implements hook_update_n().
 *
 * Installs WYSIWYG frame paragraph type.
 */
function webny_configuration_update_8040() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_text_formats']);
  \Drupal::service('module_installer')
      ->install(['webny_text_formats']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_text_editors']);
  \Drupal::service('module_installer')
      ->install(['webny_text_editors']);
  \Drupal::service('module_installer')
      ->install(['webny_wysiwyg_frame']);
}

/**
 * Implements hook_update_n().
 *
 * Re-installs featured card frame paragraph type & global nav module.
 */
function webny_configuration_update_8041() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_paragraphs_types']);
  \Drupal::service('module_installer')
      ->install(['webny_paragraphs_types']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_global_nav']);
  \Drupal::service('module_installer')
      ->install(['webny_global_nav']);
}

/**
 * Implements hook_update_n().
 *
 * Deletes attachment field from innerpage content type and news content type.
 */
function webny_configuration_update_8042() {
  \Drupal::service('module_installer')
    ->uninstall(['webny_inner_page_content_type']);
  \Drupal::service('module_installer')
    ->install(['webny_inner_page_content_type']);
  \Drupal::service('module_installer')
    ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
    ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Refreshes News, Deletes fields news_sub_title, news_teaser.
 */
function webny_configuration_update_8043() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);

  // REMOVE FIELDS AND DEPENDENCIES FROM ACSF DEV.
  $properties[0] = array(
    'entity_type' => 'node',
    'bundle' => 'webny_news',
    'field_name' => 'field_webny_news_sub_title',
    'include_deleted' => TRUE,
  );

  $properties[1] = array(
    'entity_type' => 'node',
    'bundle' => 'webny_news',
    'field_name' => 'field_webny_news_teaser',
    'include_deleted' => TRUE,
  );

  echo "Number of properties: " . count($properties);

  foreach ($properties as $prop) {

    $fields = \Drupal::entityManager()->getStorage('field_config')->loadByProperties($prop);

    $info = \Drupal::entityManager()->getDefinitions();
    foreach ($fields as $field) {
      $entity_type = $field->getTargetEntityTypeId();

      // Proceed only if the module implementing the entity
      // has not been uninstalled already.
      if (isset($info[$entity_type])) {
        Drupal::entityManager()->getStorage($entity_type)->purgeFieldData($field, 100);
        $field->delete();
        field_purge_field($field);
        unset($fields, $info);
      }
    }

  }
}

/**
 * Implements hook_update_n().
 *
 * Refreshes landing page, Deletes fields news_sub_title, news_teaser.
 */
function webny_configuration_update_8044() {

  \Drupal::service('module_installer')
      ->uninstall(['webny_landing_page_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_landing_page_content_type']);

  // REMOVE FIELDS AND DEPENDENCIES FROM ACSF DEV.
  $properties[0] = array(
    'entity_type' => 'node',
    'bundle' => 'webny_landing_page',
    'field_name' => 'field_webny_landing_subtitle',
    'include_deleted' => TRUE,
  );

  $properties[1] = array(
    'entity_type' => 'node',
    'bundle' => 'webny_landing_page',
    'field_name' => 'field_webny_landing_summary',
    'include_deleted' => TRUE,
  );

  echo "Number of properties: " . count($properties);

  foreach ($properties as $prop) {

    $fields = \Drupal::entityManager()->getStorage('field_config')->loadByProperties($prop);

    $info = \Drupal::entityManager()->getDefinitions();
    foreach ($fields as $field) {
      $entity_type = $field->getTargetEntityTypeId();

      // Proceed only if the module implementing the entity
      // has not been uninstalled already.
      if (isset($info[$entity_type])) {
        Drupal::entityManager()->getStorage($entity_type)->purgeFieldData($field, 100);
        $field->delete();
        field_purge_field($field);
        unset($fields, $info);
      }
    }

  }
}

/**
 * Implements hook_update_n().
 *
 * Refreshes landing page CT.
 */
function webny_configuration_update_8045() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_landing_page_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_landing_page_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Adds moderation for document content type and content content type.
 */
function webny_configuration_update_8046() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_contact_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_contact_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_document_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_document_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Refreshes landing page, Deletes fields paragraph for news and inner page.
 */
function webny_configuration_update_8047() {

  // REMOVE FIELDS AND DEPENDENCIES FROM ACSF DEV.
  $properties[0] = array(
    'entity_type' => 'node',
    'bundle' => 'webny_page',
    'field_name' => 'field_webny_page_paragraph',
    'include_deleted' => TRUE,
  );

  $properties[1] = array(
    'entity_type' => 'node',
    'bundle' => 'webny_news',
    'field_name' => 'field_webny_news_paragraph',
    'include_deleted' => TRUE,
  );

  echo "Number of properties: " . count($properties);

  foreach ($properties as $prop) {

    $fields = \Drupal::entityManager()->getStorage('field_config')->loadByProperties($prop);

    $info = \Drupal::entityManager()->getDefinitions();
    foreach ($fields as $field) {
      $entity_type = $field->getTargetEntityTypeId();

      // Proceed only if the module implementing the entity
      // has not been uninstalled already.
      if (isset($info[$entity_type])) {
        Drupal::entityManager()->getStorage($entity_type)->purgeFieldData($field, 100);
        $field->delete();
        field_purge_field($field);
        unset($fields, $info);
      }
    }

  }

  \Drupal::service('module_installer')
          ->uninstall(['webny_inner_page_content_type']);
  \Drupal::service('module_installer')
          ->install(['webny_inner_page_content_type']);

  \Drupal::service('module_installer')
          ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
          ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Set default value of hero toggle for existing content.
 */
function webny_configuration_update_8048() {
  // The bundles(s) to update.
  $bundles = ['webny_landing_page'];
  // The field to update.
  $hero_toggle = 'field_webny_landing_hero_toggle';

  $storage = Drupal::entityManager()->getStorage('node');
  $records = Database::getConnection()->select('node', 'n')
      ->fields('n', array('nid'))
      ->condition('type', $bundles, 'IN')
      ->orderBy('nid', 'ASC')
      ->execute();
  foreach ($records as $record) {
    $node = $storage->load($record->nid);
    // Only set value of empty fields to avoid overriding existing changes.
    if (empty($node->{$hero_toggle}->getValue())) {
      $node->{$hero_toggle}->setValue(['value' => 1]);
    }
    // Force pre_save hook to be executed.
    $node->save();
  }
}

/**
 * Implements hook_update_n().
 *
 * Uninstall old globalnav.
 */
function webny_configuration_update_8049() {

  // UNINSTALL OLD GLOBAL NAV MODULE.
  \Drupal::service('module_installer')
         ->uninstall(['webny_global_navigation']);

  // DELETE AGENCY COLOR FROM THE CONFIG DB.
  $config = \Drupal::service('config.factory')->getEditable('webny_global_nav.settings');
  $config->clear('webny_global_nav.agencycolor')->save();

}

/**
 * Implements hook_update_n().
 *
 * Enable Memcache Module.
 */
function webny_configuration_update_8050() {
  \Drupal::service('module_installer')
      ->install(['memcache']);
}

/**
 * Implements hook_update_n().
 *
 * Refreshes contact form.
 */
function webny_configuration_update_8051() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_contact_form']);
  \Drupal::service('module_installer')
      ->install(['webny_contact_form']);

  // DELETE PAGE TITLE BLOCK FROM THE CONFIG DB.
  \Drupal::service('config.factory')->getEditable('block.block.pagetitle')->delete();

}

/**
 * Implements hook_update_n().
 *
 * Enable Google Analytics Module.
 */
function webny_configuration_update_8052() {
  \Drupal::service('module_installer')
      ->uninstall(['google_analytics']);
  \Drupal::service('module_installer')
      ->install(['google_analytics']);
}

/**
 * Implements hook_update_n().
 *
 * Refreshes News content type feature.
 */
function webny_configuration_update_8053() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Install Better Exposed Filters Module
 * Refreshes News content type feature
 * Installs webny_taxonomies feature
 */
function webny_configuration_update_8054() {

  // INSTALL BETTER EXPOSED FILTER
  \Drupal::service('module_installer')
      ->install(['better_exposed_filters']);

  // INSTALL NEW WEBNY TAXONOMIES FEATURE -- CONTAINS CATEGORY FEATURE
  \Drupal::service('module_installer')
      ->install(['webny_taxonomies']);

  // REINSTALL THE NEWS CONTENT TYPE
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Enable Sitemap module, Simple Sitemap module, and WebNY Sitemap feature.
 */
function webny_configuration_update_8055() {
  \Drupal::service('module_installer')
      ->uninstall(['sitemap']);
  \Drupal::service('module_installer')
      ->install(['sitemap']);
  \Drupal::service('module_installer')
      ->uninstall(['simple_sitemap']);
  \Drupal::service('module_installer')
      ->install(['simple_sitemap']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_sitemap']);
  \Drupal::service('module_installer')
      ->install(['webny_sitemap']);
}

/**
 * Implements hook_update_n().
 *
 * Uninstall old globalnav from schema.
 */
function webny_configuration_update_8056() {

  // DELETE GLOBAL NAV FROM SCHEMA.
  Database::getConnection()->query("DELETE FROM key_value WHERE collection='system.schema' AND name='webny_global_navigation';");
  // DELETE OLD GLOBAL NAV BLOCK FROM THE CONFIG DB.
  \Drupal::service('config.factory')->getEditable('block.block.globalnavigation')->delete();
}

/**
 * Implements hook_update_n().
 *
 * Refreshes News content type and Contact content type features.
 */
function webny_configuration_update_8057() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_contact_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_contact_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Adds moderation for the content content type.
 */
function webny_configuration_update_8058() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_contact_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_contact_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Refreshes News content type.
 */
function webny_configuration_update_8059() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Modify Name column in key_value table to fix "Data too long for column 'name' at row 1" advagg issue.
 *
 */
function webny_configuration_update_8060() {

  Database::getConnection()->query("ALTER TABLE key_value MODIFY name VARCHAR(175);");
}

/**
 * Implements hook_update_n().
 *
 * Updates hero toggle value for news/inner page. Refreshes News/Inner Page content types.
 * -iojonep
 */
function webny_configuration_update_8061() {

  // Refresh Content Types for news and inner page
      \Drupal::service('module_installer')
          ->uninstall(['webny_inner_page_content_type']);
      \Drupal::service('module_installer')
          ->install(['webny_inner_page_content_type']);

      \Drupal::service('module_installer')
          ->uninstall(['webny_news_content_type']);
      \Drupal::service('module_installer')
          ->install(['webny_news_content_type']);

   // The bundles(s) to update.
        $news_bundle = ['webny_news'];
        $page_bundle = ['webny_page'];

   // Variable to display or not display the hero
        $herodisplay = 1;

   // The field to update.
        $hero_toggle = array('field_webny_news_hero_toggle', 'field_webny_page_hero_toggle');

    // UPDATE -- LOOP THROUGH BOTH CTs
    foreach($hero_toggle as $k=>$v){
        $storage = Drupal::entityManager()->getStorage('node');

        if($k == 0){
            $bundle = $news_bundle;
        } else {
            $bundle = $page_bundle;
        }

        $records = Database::getConnection()->select('node', 'n')
            ->fields('n', array('nid'))
            ->condition('type', $bundle, 'IN')
            ->orderBy('nid', 'ASC')
            ->execute();

        foreach ($records as $record) {

          $node = $storage->load($record->nid);

          // Only set value of empty fields to avoid overriding existing changes.
              if (empty($node->{$v}->getValue())) {
                $node->{$v}->setValue(['value' => $herodisplay]);
              }

          // Force pre_save hook to be executed.
          $node->save();
        }

       unset($records,$record,$node,$storage);
     }
}

/**
 * Implements hook_update_n().
 *
* Refreshes News content type to remove Keyword filters.
 */
function webny_configuration_update_8062() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Refreshes Landing/Inner Page content types.
 * -iojonep
 */
function webny_configuration_update_8063() {

  // Refresh Content Types for news and inner page

        \Drupal::service('module_installer')
          ->uninstall(['webny_paragraphs_types']);
        \Drupal::service('module_installer')
          ->install(['webny_paragraphs_types']);

        \Drupal::service('module_installer')
           ->uninstall(['webny_landing_page_content_type']);
        \Drupal::service('module_installer')
           ->install(['webny_landing_page_content_type']);

        \Drupal::service('module_installer')
           ->uninstall(['webny_inner_page_content_type']);
        \Drupal::service('module_installer')
           ->install(['webny_inner_page_content_type']);

        \Drupal::service('module_installer')
           ->uninstall(['webny_whitelisted_content']);
        \Drupal::service('module_installer')
           ->install(['webny_whitelisted_content']);

}

/**
 * Implements hook_update_n().
 *
 * Refreshes News content type to remove Keyword filters.
 */
function webny_configuration_update_8064() {
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Refreshes numerous content types to fix issues.
 */
function webny_configuration_update_8065()
{
  \Drupal::service('module_installer')
      ->uninstall(['webny_bio_frame']);
  \Drupal::service('module_installer')
      ->install(['webny_bio_frame']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_contact_form']);
  \Drupal::service('module_installer')
      ->install(['webny_contact_form']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_document_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_document_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_get_involved_frame']);
  \Drupal::service('module_installer')
      ->install(['webny_get_involved_frame']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_global_navigation_footer']);
  \Drupal::service('module_installer')
      ->install(['webny_global_navigation_footer']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_paragraphs_types']);
  \Drupal::service('module_installer')
      ->install(['webny_paragraphs_types']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_summary_frame']);
  \Drupal::service('module_installer')
      ->install(['webny_summary_frame']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_workflow_basic_configuration']);
  \Drupal::service('module_installer')
      ->install(['webny_workflow_basic_configuration']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_wysiwyg_frame']);
  \Drupal::service('module_installer')
      ->install(['webny_wysiwyg_frame']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Installs redirect module.
 *
 */
function webny_configuration_update_8066() {

        \Drupal::service('module_installer')
          ->install(['redirect']);

}

/**
 * Implements hook_update_n().
 *
 * Uninstall legacy media modules and dependencies.
 * Enable entity to allow for updating media_entity module.
 */
function webny_configuration_update_8067() {
  \Drupal::service('module_installer')
      ->uninstall(['lightning_media_video']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_document_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_whitelisted_content']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_landing_page_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_inner_page_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_contact_content_type']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_bio_frame']);
  \Drupal::service('module_installer')
      ->uninstall(['lightning_media_image']);
  \Drupal::service('module_installer')
      ->uninstall(['lightning_media']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_media']);
  \Drupal::service('module_installer')
      ->install(['entity']);
}

/**
 * Implements hook_update_n().
 *
 * Remove legacy image field from media image bundle.
 */

function webny_configuration_update_8068()
{

  // Remove legacy media image bundle field.
  $properties[0] = array(
      'entity_type' => 'media',
      'bundle' => 'image',
      'field_name' => 'image',
      'include_deleted' => TRUE,
  );


  echo "Number of properties: " . count($properties);

  foreach ($properties as $prop) {

    $fields = \Drupal::entityManager()->getStorage('field_config')->loadByProperties($prop);

    $info = \Drupal::entityManager()->getDefinitions();
    foreach ($fields as $field) {
      $entity_type = $field->getTargetEntityTypeId();

      // Proceed only if the module implementing the entity
      // has not been uninstalled already.
      if (isset($info[$entity_type])) {
        Drupal::entityManager()->getStorage($entity_type)->purgeFieldData($field, 100);
        $field->delete();
        field_purge_field($field);
        unset($fields, $info);
      }
    }

  }
}

/**
 * Implements hook_update_n().
 *
 * Enable webny_media module and dependencies.
 */
function webny_configuration_update_8069() {

  \Drupal::service('module_installer')
      ->install(['webny_base']);
  \Drupal::service('module_installer')
      ->install(['libraries']);
  // Add media buttons and dependent view modes to needed editors.
  \Drupal::service('module_installer')
      ->uninstall(['webny_text_editors']);
  \Drupal::service('module_installer')
      ->install(['webny_text_editors']);
  \Drupal::service('module_installer')
      ->install(['webny_media']);
  // Install webny_media module again to import config circular dependencies.
  \Drupal::service('module_installer')
      ->install(['webny_media']);
  // Reinstall features in the needed order
  \Drupal::service('module_installer')
      ->install(['webny_paragraphs_types']);
  \Drupal::service('module_installer')
      ->install(['webny_bio_frame']);
  \Drupal::service('module_installer')
      ->install(['webny_contact_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_inner_page_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_landing_page_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_whitelisted_content']);
  \Drupal::service('module_installer')
      ->install(['webny_document_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 * Enable webny_base module.
 */
function webny_configuration_update_8070()
{

  \Drupal::service('module_installer')
      ->install(['webny_base']);
}

/**
 * Implements hook_update_n().
 *
 * refresh media module.
 */
function webny_configuration_update_8071()
{

  \Drupal::service('module_installer')
      ->uninstall(['webny_media']);
  \Drupal::service('module_installer')
      ->install(['webny_media']);
}

/**
 * Implements hook_update_n().
 *
 * refresh contact form module.
 */
function webny_configuration_update_8072()
{

  \Drupal::service('module_installer')
      ->uninstall(['webny_contact_form']);
  \Drupal::service('module_installer')
      ->install(['webny_contact_form']);
}

/**
 * Implements hook_update_n().
 *
 * refresh media module.
 */
function webny_configuration_update_8073()
{

  \Drupal::service('module_installer')
      ->uninstall(['webny_media']);
  \Drupal::service('module_installer')
      ->install(['webny_media']);
}

/**
 * Implements hook_update_n().
 *
 * Removes the phone field from the contact content type
 * Installs the paragraph type for phone contact
 * Refresh the contact content type
 */
function webny_configuration_update_8074() {

// REMOVE FIELDS AND DEPENDENCIES FROM ACSF DEV.
  $properties[0] = array(
      'entity_type' => 'node',
      'bundle' => 'webny_contact',
      'field_name' => 'field_webny_contact_phone',
      'include_deleted' => TRUE,
  );

  foreach ($properties as $prop) {

    $fields = \Drupal::entityManager()->getStorage('field_config')->loadByProperties($prop);

    $info = \Drupal::entityManager()->getDefinitions();
    foreach ($fields as $field) {
      $entity_type = $field->getTargetEntityTypeId();

// Proceed only if the module implementing the entity
// has not been uninstalled already.
      if (isset($info[$entity_type])) {
        Drupal::entityManager()->getStorage($entity_type)->purgeFieldData($field, 100);
        $field->delete();
        field_purge_field($field);
        unset($fields, $info);
      }
    }
  }

// INSTALL THE PARAGRAPH TYPE
print webny_configuration_uninstall_module('webny_phone_contact_paragraph');
print webny_configuration_enable_module('webny_phone_contact_paragraph');

// REFRESH THE CONTACT CONTENT TYPE
print webny_configuration_uninstall_module('webny_contact_content_type');
print webny_configuration_enable_module('webny_contact_content_type');

}

/**
 * Implements hook_update_n().
 *
 * Update News Content type to remove summary from Hero display.
 */
function webny_configuration_update_8075(){
  \Drupal::service('module_installer')
      ->uninstall(['webny_news_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_news_content_type']);
}

/**
 * Implements hook_update_n().
 *
 * Refresh the inner page content type
 */
function webny_configuration_update_8076() {
   print webny_configuration_uninstall_module('webny_inner_page_content_type');
   print webny_configuration_enable_module('webny_inner_page_content_type');
}

/**
 * Implements hook_update_n().
 *
 * Imports updated news listing view.
 */
function webny_configuration_update_8077() {
  $config_factory = \Drupal::configFactory();
  $profile_config = \Drupal::service('webny.profile_config');

  // Import new/changed configuration.
  $config_to_update = [
    // Updated news listing view.
      'views.view.webny_news_listing',
  ];
  $profile_config->bulkImport($config_to_update);
  // Clear the config cache.
  $config_factory->reset();
}

/**
 * Implements hook_update_n().
 *
 * Imports updated news listing view and media results image.
 */
function webny_configuration_update_8078() {
  $config_factory = \Drupal::configFactory();
  $profile_config = \Drupal::service('webny.profile_config');

  // Import new/changed configuration.
  $config_to_update = [
    // Updated news listing view.
      'views.view.webny_news_listing',
      'core.entity_view_display.media.image.results_image',
  ];
  $profile_config->bulkImport($config_to_update);
  // Clear the config cache.
  $config_factory->reset();
}

/**
 * Implements hook_update_n().
 *
 * Refresh the landing and inner page content type
 * Remove the toggle for hero
 */
function webny_configuration_update_8079() {

    // ====================================================================================
    // REMOVE THE LEGACY HERO TOGGLE FROM INNER AND LANDING.

       $properties[0] = array(
          'entity_type' => 'node',
          'bundle' => 'webny_page',
          'field_name' => 'field_webny_page_hero_toggle',
          'include_deleted' => TRUE,
       );

       $properties[1] = array(
         'entity_type' => 'node',
         'bundle' => 'webny_landing_page',
         'field_name' => 'field_webny_landing_hero_toggle',
         'include_deleted' => TRUE,
       );

       foreach ($properties as $prop) {

         $fields = \Drupal::entityManager()->getStorage('field_config')->loadByProperties($prop);

         $info = \Drupal::entityManager()->getDefinitions();
         foreach ($fields as $field) {
           $entity_type = $field->getTargetEntityTypeId();

         // Proceed only if the module implementing the entity has not been uninstalled already.
           if (isset($info[$entity_type])) {
             Drupal::entityManager()->getStorage($entity_type)->purgeFieldData($field, 100);
             $field->delete();
             field_purge_field($field);
             unset($fields, $info);
           }
         }
       }

    // ====================================================================================

    // REFRESH THE INNER PAGE
        print webny_configuration_uninstall_module('webny_inner_page_content_type');
        print webny_configuration_enable_module('webny_inner_page_content_type');

    // REFRESH THE LANDING PAGE
        print webny_configuration_uninstall_module('webny_landing_page_content_type');
        print webny_configuration_enable_module('webny_landing_page_content_type');

        $config_factory = \Drupal::configFactory();
        $profile_config = \Drupal::service('webny.profile_config');

        // Import new/changed configuration.
        $config_to_update = [
          // Updated landing page content type.
            'core.entity_form_display.node.webny_landing_page.default',
            'core.entity_view_display.node.webny_landing_page.default',
            'core.entity_view_display.node.webny_landing_page.teaser',
            'core.entity_view_display.node.webny_landing_page.webny_announcement',
            'core.entity_view_display.node.webny_landing_page.webny_featured_card',
        ];
        $profile_config->bulkImport($config_to_update);
        // Clear the config cache.
        $config_factory->reset();
}

/**
 * Implements hook_update_n().
 *
 * enable ViewField module, refresh landing page with optional config.
 */
function webny_configuration_update_8080()
{

  \Drupal::service('module_installer')
      ->install(['viewfield']);
  \Drupal::service('module_installer')
      ->uninstall(['webny_landing_page_content_type']);
  \Drupal::service('module_installer')
      ->install(['webny_landing_page_content_type']);

  $config_factory = \Drupal::configFactory();
  $profile_config = \Drupal::service('webny.profile_config');

  // Import new/changed configuration.
  $config_to_update = [
    // Updated landing page content type.
      'core.entity_form_display.node.webny_landing_page.default',
      'core.entity_view_display.node.webny_landing_page.default',
      'core.entity_view_display.node.webny_landing_page.teaser',
      'core.entity_view_display.node.webny_landing_page.webny_announcement',
      'core.entity_view_display.node.webny_landing_page.webny_featured_card',
  ];
  $profile_config->bulkImport($config_to_update);
  // Clear the config cache.
  $config_factory->reset();
}

  /**
   * Implements hook_update_n().
   *
   * Refreshes the media module with updates to bioframe
   * Refreshes the contact content type
   */
  function webny_configuration_update_8082() {
    // REINSTALL THE MEDIA CUSTOM MODULE
    print webny_configuration_uninstall_module('webny_media');
    print webny_configuration_enable_module('webny_media');

    // REFRESH MEDIA
    $config_factory = \Drupal::configFactory();
    $profile_config = \Drupal::service('webny.profile_config');

    // Import new/changed configuration.
    $config_to_update = [
      // Updated media custom files to add Bio Frame image style.
        'core.entity_view_display.media.image.default',
        'core.entity_view_display.media.image.bio_frame',
        'core.entity_view_display.media.image.results_image',
        'core.entity_view_display.media.image.thumbnail',
        'core.entity_view_display.media.image.wysiwyg',
        'image.style.bio_frame',
        'responsive_image.styles.bio_frame',
    ];

    $profile_config->bulkImport($config_to_update);

    // Clear the config cache.
    $config_factory->reset();

    // REFRESH THE CONTACT CONTENT TYPE
    print webny_configuration_uninstall_module('webny_contact_content_type');
    print webny_configuration_enable_module('webny_contact_content_type');
  }

/**
 * Implements hook_update_n().
 *
 * Refresh the Landing Page Content Type
 */
function webny_configuration_update_8081() {

    // REFRESH THE LANDING PAGE
         print webny_configuration_uninstall_module('webny_landing_page_content_type');
         print webny_configuration_enable_module('webny_landing_page_content_type');

        $config_factory = \Drupal::configFactory();
          $profile_config = \Drupal::service('webny.profile_config');

          // Import new/changed configuration.
          $config_to_update = [
            // Updated landing page content type.
              'core.entity_form_display.node.webny_landing_page.default',
              'core.entity_view_display.node.webny_landing_page.default',
              'core.entity_view_display.node.webny_landing_page.teaser',
              'core.entity_view_display.node.webny_landing_page.webny_announcement',
              'core.entity_view_display.node.webny_landing_page.webny_featured_card',
          ];
          $profile_config->bulkImport($config_to_update);
          // Clear the config cache.
          $config_factory->reset();
}


/**
 * Implements hook_update_n().
 *
 * REFRESH THE NEWS CONTENT TYPE - REMOVE THE HERO TOGGLE FIELD FROM NEWS
 */
function webny_configuration_update_8083() {


    // REMOVE THE FIELDS FROM NEWS HERO TOGGLE

       $properties[0] = array(
          'entity_type' => 'node',
          'bundle' => 'webny_news',
          'field_name' => 'field_webny_news_hero_toggle',
          'include_deleted' => TRUE,
       );

       foreach ($properties as $prop) {

         $fields = \Drupal::entityManager()->getStorage('field_config')->loadByProperties($prop);

         $info = \Drupal::entityManager()->getDefinitions();
         foreach ($fields as $field) {
           $entity_type = $field->getTargetEntityTypeId();

         // Proceed only if the module implementing the entity has not been uninstalled already.
           if (isset($info[$entity_type])) {
             Drupal::entityManager()->getStorage($entity_type)->purgeFieldData($field, 100);
             $field->delete();
             field_purge_field($field);
             unset($fields, $info);
           }
         }
       }

    // REFRESH THE NEWS PAGE

         print webny_configuration_uninstall_module('webny_news_content_type');
         print webny_configuration_enable_module('webny_news_content_type');

        $config_factory = \Drupal::configFactory();
        $profile_config = \Drupal::service('webny.profile_config');

          // Import new/changed configuration.
          $config_to_update = [
            // Updated landing page content type.
            'views.view.webny_news_listing',
          ];
          $profile_config->bulkImport($config_to_update);
          // Clear the config cache.
          $config_factory->reset();
}



/**
 * Helper function to enable a Drupal module and print the result.
 *
 * @param string $module_name
 *   The name of the module.
 *
 * @return string
 *   Output for Drush to display on console.
 */
function webny_configuration_enable_module($module_name) {

  try {
    \Drupal::service('module_installer')->install([$module_name]);
    return $module_name . " installed.\n";
  }
  catch (Exception $error) {
    throw new UpdateException("An error occurred installing " . $module_name . ": " . $error . "\n");
  }
}

/**
 * Helper function to uninstall a Drupal module and print the result.
 *
 * @param string $module_name
 *   The name of the module.
 *
 * @return string
 *   Output for Drush to display on console.
 */
function webny_configuration_uninstall_module($module_name) {

  try {
    \Drupal::service('module_installer')->uninstall([$module_name]);
    return $module_name . " uninstalled.\n";
  }
  catch (Exception $error) {
    throw new UpdateException("An error occurred uninstalling " . $module_name . ": " . $error . "\n");
  }
}
